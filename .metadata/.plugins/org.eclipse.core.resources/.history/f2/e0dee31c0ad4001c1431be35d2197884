package com.educacionit.jwa.backend.backend.jwa.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.educacionit.jwa.backend.backend.jwa.exceptions.BadRequestException;
import com.educacionit.jwa.backend.backend.jwa.exceptions.ErrorEnum;
import com.educacionit.jwa.backend.backend.jwa.models.LogInModel;
import com.educacionit.jwa.backend.backend.jwa.repositories.LogInDAO;
import com.educacionit.jwa.backend.backend.jwa.security.JWTTokenGeneration;

@Service
public class LogInService {
	
	@Autowired
	LogInDAO logInDAO;
	@Autowired
	JWTTokenGeneration jwtToken;
	
	public String startSession(LogInModel user) {
		LogInModel userDB = logInDAO.findByUserName(user.getUserName());		
		if(userDB != null && userDB.getPassword().equals(user.getPassword())) {
			String token = jwtToken.generateToken(user);
			return "Log in successfully. Token:" + token ;
		} else {
			throw new BadRequestException("Invalid credentials.", ErrorEnum.UNAUTHENTICATED);
		}
	}
	
	public String registerNewUser(LogInModel user) {
		LogInModel userDB = logInDAO.findByUserName(user.getUserName());
		if(userDB == null || !(user.getUserName().equals(userDB.getUserName()))) {
			throw new BadRequestException("Invalid credentials", ErrorEnum.EXISTINGUSER);
		}  else {
			String token = jwtToken.generateToken(user);
			return "Sign up successfully. Token:" + token ;
		}
	}
}
